// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using scrubby_webapi.Services.Context;

#nullable disable

namespace scrubby_webapi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220521232749_defaultcollectionsInvited")]
    partial class defaultcollectionsInvited
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("scrubby_webapi.Models.AssignedTasksChildModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AssignedTaskId")
                        .HasColumnType("int");

                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.Property<string>("DateCompleted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateCreated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequestedApproval")
                        .HasColumnType("bit");

                    b.Property<int>("Repeat")
                        .HasColumnType("int");

                    b.Property<int>("SpaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AssignedTasksChildInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignedTaskId = 1,
                            ChildId = 1,
                            DateCompleted = "04/02/2022",
                            DateCreated = "03/30/2022",
                            IsCompleted = false,
                            IsDeleted = false,
                            IsRequestedApproval = false,
                            Repeat = 1,
                            SpaceId = 0
                        },
                        new
                        {
                            Id = 2,
                            AssignedTaskId = 2,
                            ChildId = 2,
                            DateCompleted = "04/03/2022",
                            DateCreated = "03/31/2022",
                            IsCompleted = false,
                            IsDeleted = false,
                            IsRequestedApproval = false,
                            Repeat = 1,
                            SpaceId = 0
                        },
                        new
                        {
                            Id = 3,
                            AssignedTaskId = 3,
                            ChildId = 3,
                            DateCompleted = "04/04/2022",
                            DateCreated = "04/01/2022",
                            IsCompleted = false,
                            IsDeleted = false,
                            IsRequestedApproval = false,
                            Repeat = 2,
                            SpaceId = 0
                        },
                        new
                        {
                            Id = 4,
                            AssignedTaskId = 4,
                            ChildId = 4,
                            DateCompleted = "04/05/2022",
                            DateCreated = "04/02/2022",
                            IsCompleted = false,
                            IsDeleted = false,
                            IsRequestedApproval = false,
                            Repeat = 3,
                            SpaceId = 0
                        },
                        new
                        {
                            Id = 5,
                            AssignedTaskId = 5,
                            ChildId = 5,
                            DateCompleted = "04/06/2022",
                            DateCreated = "04/03/2022",
                            IsCompleted = false,
                            IsDeleted = false,
                            IsRequestedApproval = false,
                            Repeat = 2,
                            SpaceId = 0
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.AssignedTasksUsersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AssignedTaskId")
                        .HasColumnType("int");

                    b.Property<string>("DateCompleted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateCreated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Repeat")
                        .HasColumnType("int");

                    b.Property<int>("SpaceId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AssignedTasksUsersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignedTaskId = 5,
                            DateCompleted = "4-22-2022",
                            DateCreated = "4-21-2022",
                            IsCompleted = false,
                            IsDeleted = false,
                            Repeat = 2,
                            SpaceId = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 2,
                            AssignedTaskId = 3,
                            DateCompleted = "4-12-2022",
                            DateCreated = "4-10-2022",
                            IsCompleted = false,
                            IsDeleted = false,
                            Repeat = 3,
                            SpaceId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            AssignedTaskId = 2,
                            DateCompleted = "4-3-2022",
                            DateCreated = "4-1-2022",
                            IsCompleted = false,
                            IsDeleted = false,
                            Repeat = 1,
                            SpaceId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            AssignedTaskId = 4,
                            DateCompleted = "4-20-2022",
                            DateCreated = "4-20-2022",
                            IsCompleted = false,
                            IsDeleted = false,
                            Repeat = 1,
                            SpaceId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            AssignedTaskId = 1,
                            DateCompleted = "3-31-2022",
                            DateCreated = "3-30-2022",
                            IsCompleted = false,
                            IsDeleted = false,
                            Repeat = 2,
                            SpaceId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.DefaultCollectionDependentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ChildId")
                        .HasColumnType("int");

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DefaultCollectionDependentInfo");
                });

            modelBuilder.Entity("scrubby_webapi.Models.DefaultCollectionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DefaultCollectionInfo");
                });

            modelBuilder.Entity("scrubby_webapi.Models.DependentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DependentAge")
                        .HasColumnType("int");

                    b.Property<int>("DependentCoins")
                        .HasColumnType("int");

                    b.Property<string>("DependentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DependentPassCode")
                        .HasColumnType("int");

                    b.Property<string>("DependentPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DependentPoints")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DependentInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DependentAge = 11,
                            DependentCoins = 5000,
                            DependentName = "Taylor",
                            DependentPassCode = 0,
                            DependentPhoto = "https://scrubbystorage.blob.core.windows.net/scrubbystorage/avatar6.png",
                            DependentPoints = 0,
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            DependentAge = 8,
                            DependentCoins = 2000,
                            DependentName = "Sammy",
                            DependentPassCode = 0,
                            DependentPhoto = "https://scrubbystorage.blob.core.windows.net/scrubbystorage/avatar7.png",
                            DependentPoints = 6,
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            DependentAge = 15,
                            DependentCoins = 100,
                            DependentName = "Jeff",
                            DependentPassCode = 0,
                            DependentPhoto = "https://scrubbystorage.blob.core.windows.net/scrubbystorage/avatar8.png",
                            DependentPoints = 5,
                            IsDeleted = true,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            DependentAge = 8,
                            DependentCoins = 7000,
                            DependentName = "Jessica",
                            DependentPassCode = 0,
                            DependentPhoto = "https://scrubbystorage.blob.core.windows.net/scrubbystorage/avatar9.png",
                            DependentPoints = 670,
                            IsDeleted = false,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            DependentAge = 17,
                            DependentCoins = 4000,
                            DependentName = "Tony",
                            DependentPassCode = 0,
                            DependentPhoto = "https://scrubbystorage.blob.core.windows.net/scrubbystorage/avatar10.png",
                            DependentPoints = 50,
                            IsDeleted = false,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.InviteUsersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("InvitedFullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvitedId")
                        .HasColumnType("int");

                    b.Property<string>("InvitedPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvitedUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InviterFullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InviterId")
                        .HasColumnType("int");

                    b.Property<string>("InviterPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InviterUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("InvitesInfo");
                });

            modelBuilder.Entity("scrubby_webapi.Models.SelectedItemsInSpaceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("SpaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SelectedItemsInSpaceInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = true,
                            SpaceId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            SpaceId = 2
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = true,
                            SpaceId = 3
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            SpaceId = 4
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = true,
                            SpaceId = 5
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.SelectedTasksModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DateCompleted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateCreated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SpaceId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SelectedTasksInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCompleted = "",
                            DateCreated = "4-19-2022",
                            IsArchived = true,
                            IsDeleted = false,
                            ItemId = 1,
                            ProductId = 3,
                            SpaceId = 2,
                            TaskId = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            DateCompleted = "4-22-2022",
                            DateCreated = "4-21-2022",
                            IsArchived = true,
                            IsDeleted = false,
                            ItemId = 1,
                            ProductId = 3,
                            SpaceId = 2,
                            TaskId = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateCompleted = "4-22-2022",
                            DateCreated = "4-21-2022",
                            IsArchived = true,
                            IsDeleted = false,
                            ItemId = 1,
                            ProductId = 3,
                            SpaceId = 2,
                            TaskId = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            DateCompleted = "4-22-2022",
                            DateCreated = "4-21-2022",
                            IsArchived = true,
                            IsDeleted = false,
                            ItemId = 1,
                            ProductId = 3,
                            SpaceId = 2,
                            TaskId = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            DateCompleted = "4-22-2022",
                            DateCreated = "4-21-2022",
                            IsArchived = true,
                            IsDeleted = false,
                            ItemId = 1,
                            ProductId = 3,
                            SpaceId = 2,
                            TaskId = 5,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.SharedSpacesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<string>("InvitedUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InviterUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SharedSpacesInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CollectionId = 2,
                            InvitedUsername = "Peter",
                            IsAccepted = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CollectionId = 2,
                            InvitedUsername = "Walaa",
                            IsAccepted = true,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.SpaceCollectionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CollectionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SpaceCollectionInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CollectionName = "Smith House",
                            IsDefault = false,
                            IsDeleted = false,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CollectionName = "Storage Shed",
                            IsDefault = false,
                            IsDeleted = false,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CollectionName = "Paris Home",
                            IsDefault = false,
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            CollectionName = "Work Office",
                            IsDefault = false,
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            CollectionName = "Shed",
                            IsDefault = false,
                            IsDeleted = false,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.SpaceInfoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<string>("SpaceCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpaceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SpaceInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CollectionId = 1,
                            SpaceCategory = "Space Category",
                            SpaceName = "Space Name"
                        },
                        new
                        {
                            Id = 2,
                            CollectionId = 1,
                            SpaceCategory = "Space Category",
                            SpaceName = "Space Name"
                        },
                        new
                        {
                            Id = 3,
                            CollectionId = 1,
                            SpaceCategory = "Space Category",
                            SpaceName = "Space Name"
                        },
                        new
                        {
                            Id = 4,
                            CollectionId = 1,
                            SpaceCategory = "Space Category",
                            SpaceName = "Space Name"
                        },
                        new
                        {
                            Id = 5,
                            CollectionId = 1,
                            SpaceCategory = "Space Category",
                            SpaceName = "Space Name"
                        },
                        new
                        {
                            Id = 6,
                            CollectionId = 3,
                            SpaceCategory = "Bathroom",
                            SpaceName = "Master Bath"
                        },
                        new
                        {
                            Id = 7,
                            CollectionId = 3,
                            SpaceCategory = "Bedroom",
                            SpaceName = "Kids Bedroom"
                        },
                        new
                        {
                            Id = 8,
                            CollectionId = 3,
                            SpaceCategory = "Kitchen",
                            SpaceName = "Kitchen"
                        },
                        new
                        {
                            Id = 9,
                            CollectionId = 3,
                            SpaceCategory = "Living Room",
                            SpaceName = "Loft"
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.Static.CleaningProductsStaticAPIModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Instructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Warnings")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CleaningProductsStaticAPIInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Instructions = "Spray compound onto window and wipe with a clean towel",
                            ProductName = "Window Wipers",
                            TaskTags = "Window, Mirror",
                            Warnings = "HARMFUL IF SWALLOWED. SKIN AND EYE IRRITANT."
                        },
                        new
                        {
                            Id = 2,
                            Instructions = "Spray compound onto surface and scurb with a sponge",
                            ProductName = "Bleach",
                            TaskTags = "Toilet, Shower, Bathtub",
                            Warnings = "HARMFUL IF SWALLOWED. SKIN AND EYE IRRITANT."
                        },
                        new
                        {
                            Id = 3,
                            Instructions = "Squeeze onto a sponge",
                            ProductName = "Dish Detergents",
                            TaskTags = "Dishes",
                            Warnings = "HARMFUL IF SWALLOWED. SKIN AND EYE IRRITANT."
                        },
                        new
                        {
                            Id = 4,
                            Instructions = "Pour into a bucket of warm water and stir until product is mixed",
                            ProductName = "Floor Detergents",
                            TaskTags = "Floor",
                            Warnings = "HARMFUL IF SWALLOWED. SKIN AND EYE IRRITANT."
                        },
                        new
                        {
                            Id = 5,
                            Instructions = "Spray compound onto window and wipe with a clean towel",
                            ProductName = "Window Wipers",
                            TaskTags = "Window, Mirror",
                            Warnings = "HARMFUL IF SWALLOWED. SKIN AND EYE IRRITANT."
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.Static.SpaceItemsStaticAPIModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SpaceItemsStaticAPIInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A chair that is brown",
                            Name = "Wooden Chair",
                            Tags = "living room, bedroom, office "
                        },
                        new
                        {
                            Id = 2,
                            Description = "A lamp",
                            Name = "Lamp",
                            Tags = "living room, bedroom, office "
                        },
                        new
                        {
                            Id = 3,
                            Description = "A round table that is made of wood",
                            Name = "Wooden Table",
                            Tags = "kitchen, living room, bedroom, office"
                        },
                        new
                        {
                            Id = 4,
                            Description = "A table that is made of glass",
                            Name = "Glass Table",
                            Tags = "kitchen, living room, bedroom, office"
                        },
                        new
                        {
                            Id = 5,
                            Description = "A table that is made of ceramic",
                            Name = "Ceramic Table",
                            Tags = "kitchen, living room, bedroom, office"
                        },
                        new
                        {
                            Id = 6,
                            Description = "A table that is made of granite",
                            Name = "Granite Table",
                            Tags = "kitchen, living room, bedroom, office"
                        },
                        new
                        {
                            Id = 7,
                            Description = "A table that is made of marble",
                            Name = "Marble Table",
                            Tags = "kitchen, living room, bedroom, office"
                        },
                        new
                        {
                            Id = 8,
                            Description = "A rug that is fluffy",
                            Name = "Rug",
                            Tags = "carpet, fluffy, living room, bedroom"
                        },
                        new
                        {
                            Id = 9,
                            Description = "A water bed",
                            Name = "Water Bed",
                            Tags = "slippery, wet, bedroom, "
                        },
                        new
                        {
                            Id = 10,
                            Description = "A standard bed",
                            Name = "Bed",
                            Tags = "bedroom, attic"
                        },
                        new
                        {
                            Id = 11,
                            Description = "A bunk bed with one mattress in the bottom and another mattress in the top",
                            Name = "Bunk Bed",
                            Tags = "bedroom, attic"
                        },
                        new
                        {
                            Id = 12,
                            Description = "A bed that is made for babies/toddlers",
                            Name = "Baby Cot",
                            Tags = "bedroom, attic, living room"
                        },
                        new
                        {
                            Id = 13,
                            Description = "A bed that is made for children",
                            Name = "Children Bed",
                            Tags = "bedroom, attic"
                        },
                        new
                        {
                            Id = 14,
                            Description = "a bed that is used in the medical field",
                            Name = "Medical Bed",
                            Tags = "bedroom, attic,"
                        },
                        new
                        {
                            Id = 15,
                            Description = "A bed that can be a sofa or can fold into a bed",
                            Name = "Futon",
                            Tags = "bedroom, attic, living room"
                        },
                        new
                        {
                            Id = 16,
                            Description = "A bed that is inflated by air",
                            Name = "Air Mattress",
                            Tags = "bedroom, attic"
                        },
                        new
                        {
                            Id = 17,
                            Description = "A floor that is made of ceramic tiles",
                            Name = "Ceramic Tile Floor",
                            Tags = "living room, bathroom, kitchen"
                        },
                        new
                        {
                            Id = 18,
                            Description = "A floor that is made of vinyl",
                            Name = "Vinyl Floor",
                            Tags = "living room, bathroom, kitchen"
                        },
                        new
                        {
                            Id = 19,
                            Description = "A floor that is made of concrete",
                            Name = "Concrete Floor",
                            Tags = "living room, bathroom, kitchen"
                        },
                        new
                        {
                            Id = 20,
                            Description = "A Chair that is made of fabric",
                            Name = "Fabric Chair",
                            Tags = "living room, bedroom, office"
                        },
                        new
                        {
                            Id = 21,
                            Description = "",
                            Name = "Computer Monitor",
                            Tags = "office"
                        },
                        new
                        {
                            Id = 22,
                            Description = "",
                            Name = "Keyboard",
                            Tags = "office"
                        },
                        new
                        {
                            Id = 23,
                            Description = "",
                            Name = "Bookshelf",
                            Tags = "office, living room"
                        },
                        new
                        {
                            Id = 24,
                            Description = "",
                            Name = "Side table",
                            Tags = "office, living room, office"
                        },
                        new
                        {
                            Id = 25,
                            Description = "",
                            Name = "Dresser",
                            Tags = "bedroom"
                        },
                        new
                        {
                            Id = 26,
                            Description = "",
                            Name = "Drawer Chest",
                            Tags = "bedroom"
                        },
                        new
                        {
                            Id = 27,
                            Description = "",
                            Name = "Nightstand",
                            Tags = "bedroom"
                        },
                        new
                        {
                            Id = 28,
                            Description = "",
                            Name = "Mirror",
                            Tags = "office, living room, office, bedroom, bathroom"
                        },
                        new
                        {
                            Id = 29,
                            Description = "",
                            Name = "Sink",
                            Tags = "bathroom, kitchen, laundry room"
                        },
                        new
                        {
                            Id = 30,
                            Description = "",
                            Name = "Cabinet",
                            Tags = "bathroom"
                        },
                        new
                        {
                            Id = 31,
                            Description = "",
                            Name = "Vanity",
                            Tags = "bathroom"
                        },
                        new
                        {
                            Id = 32,
                            Description = "",
                            Name = "Toilet",
                            Tags = "bathroom"
                        },
                        new
                        {
                            Id = 33,
                            Description = "",
                            Name = "Bathtub",
                            Tags = "bathroom"
                        },
                        new
                        {
                            Id = 34,
                            Description = "",
                            Name = "Shower Stall",
                            Tags = "bathroom"
                        },
                        new
                        {
                            Id = 35,
                            Description = "",
                            Name = "Sofa",
                            Tags = "living room"
                        },
                        new
                        {
                            Id = 36,
                            Description = "",
                            Name = "TV Stand",
                            Tags = "living room"
                        },
                        new
                        {
                            Id = 37,
                            Description = "",
                            Name = "Cabinets",
                            Tags = "kitchen"
                        },
                        new
                        {
                            Id = 38,
                            Description = "",
                            Name = "Stove Top",
                            Tags = "kitchen"
                        },
                        new
                        {
                            Id = 39,
                            Description = "",
                            Name = "Oven",
                            Tags = "kitchen"
                        },
                        new
                        {
                            Id = 40,
                            Description = "",
                            Name = "Microwave",
                            Tags = "kitchen"
                        },
                        new
                        {
                            Id = 41,
                            Description = "",
                            Name = "Countertops",
                            Tags = "kitchen"
                        },
                        new
                        {
                            Id = 42,
                            Description = "",
                            Name = "Wooden Floor",
                            Tags = "living room, kithen, bedroom"
                        },
                        new
                        {
                            Id = 43,
                            Description = "",
                            Name = "Fridge",
                            Tags = "kitchen"
                        },
                        new
                        {
                            Id = 44,
                            Description = "",
                            Name = "Dishwasher",
                            Tags = "kitchen"
                        },
                        new
                        {
                            Id = 45,
                            Description = "",
                            Name = "Car",
                            Tags = "garage"
                        },
                        new
                        {
                            Id = 46,
                            Description = "",
                            Name = "Work Station",
                            Tags = "garage"
                        },
                        new
                        {
                            Id = 47,
                            Description = "",
                            Name = "Grass",
                            Tags = "yard"
                        },
                        new
                        {
                            Id = 48,
                            Description = "",
                            Name = "Tree",
                            Tags = "yard"
                        },
                        new
                        {
                            Id = 49,
                            Description = "",
                            Name = "Plants",
                            Tags = "yard"
                        },
                        new
                        {
                            Id = 50,
                            Description = "",
                            Name = "laundry",
                            Tags = "laundry room"
                        },
                        new
                        {
                            Id = 51,
                            Description = "A floor that is made of carpet",
                            Name = "Carpet Floor",
                            Tags = "living room, bedroom"
                        },
                        new
                        {
                            Id = 52,
                            Description = "A Trashbin",
                            Name = "Trash",
                            Tags = "kitchen"
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.Static.TasksInfoStaticAPIModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("coins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TasksInfoStaticAPIInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Clean the toilet using a sanitizer",
                            Name = "Clean",
                            Tags = "toilet",
                            Time = "15 min",
                            coins = 15
                        },
                        new
                        {
                            Id = 2,
                            Description = "Remove the comforter, make sure the fitted sheet is clean and stretched. Lay out your top sheet an put your comforter on, then add the pillows.",
                            Name = "Make",
                            Tags = "bed",
                            Time = "10 min",
                            coins = 10
                        },
                        new
                        {
                            Id = 3,
                            Description = "Load your dishwasher with dirty dishes. Make sure the dishes don't have a lot of food on them.",
                            Name = "Wash dishes",
                            Tags = "dishwasher",
                            Time = "10 min",
                            coins = 15
                        },
                        new
                        {
                            Id = 4,
                            Description = "Wash clothes with one batch colors and other batch white",
                            Name = "Wash Clothes",
                            Tags = "laundry",
                            Time = "15 min",
                            coins = 20
                        },
                        new
                        {
                            Id = 5,
                            Description = "Dust the piece of furniture",
                            Name = "Dust",
                            Tags = "chair, table, monitor, keyboard, bookshelf, dresser, drawer, nightstand, cabinet, TV, Cabinets",
                            Time = "5 min",
                            coins = 5
                        },
                        new
                        {
                            Id = 6,
                            Description = "Remove old bedsheets and replace with clean sheets. Remove the comforter, make sure the fitted sheet is clean and stretched. Lay out your top sheet an put your comforter on, then add the pillows.",
                            Name = "Change Bedsheets",
                            Tags = "bed",
                            Time = "10 min",
                            coins = 10
                        },
                        new
                        {
                            Id = 7,
                            Description = "Polish the wood surface",
                            Name = "Polish",
                            Tags = "wood, wooden, Wooden Chair, Wooden Table, Dresser, Drawer Chest, Nightstand, TV Stand ",
                            Time = "5 min",
                            coins = 5
                        },
                        new
                        {
                            Id = 8,
                            Description = "",
                            Name = "Scrub",
                            Tags = "toilet, sink ",
                            Time = "5 min",
                            coins = 5
                        },
                        new
                        {
                            Id = 9,
                            Description = "clean",
                            Name = "Sanitize",
                            Tags = "",
                            Time = " min",
                            coins = 5
                        },
                        new
                        {
                            Id = 10,
                            Description = "Organize the items on the surface",
                            Name = "Organize",
                            Tags = "Work Station, Countertops, Bookshelf",
                            Time = " min",
                            coins = 5
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            Name = "Shine Glass",
                            Tags = "Glass Table, Vanity, Mirror ",
                            Time = "5 min",
                            coins = 5
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            Name = "Wipe",
                            Tags = "",
                            Time = " min",
                            coins = 5
                        },
                        new
                        {
                            Id = 13,
                            Description = "",
                            Name = "Sweep",
                            Tags = "Ceramic Tile Floor, Concrete Floor, Vinyl Floor",
                            Time = "10 min",
                            coins = 10
                        },
                        new
                        {
                            Id = 14,
                            Description = "Sweep or vaccum under the furniture",
                            Name = "Sweep under",
                            Tags = "chair, couch",
                            Time = "10 min",
                            coins = 10
                        },
                        new
                        {
                            Id = 15,
                            Description = "Vaccume the carpet with a vaccum cleaner",
                            Name = "Vaccum",
                            Tags = "Carpet Floor",
                            Time = "15 min",
                            coins = 15
                        },
                        new
                        {
                            Id = 16,
                            Description = "",
                            Name = "Mop",
                            Tags = "Wooden Floor, Vinyl Floor, Ceramic Tile Floor",
                            Time = "15 min",
                            coins = 15
                        },
                        new
                        {
                            Id = 17,
                            Description = "Trim the tree to make sure it looks good",
                            Name = "Trim Tree",
                            Tags = "tree",
                            Time = "20 min",
                            coins = 20
                        },
                        new
                        {
                            Id = 18,
                            Description = "Take the trash outside and put a new trash lining",
                            Name = "Remove ",
                            Tags = "trash",
                            Time = "5 min",
                            coins = 5
                        },
                        new
                        {
                            Id = 19,
                            Description = "Cut the grass on the lawn with a lawn mower ",
                            Name = "Mow the Lawn",
                            Tags = "grass",
                            Time = " 20 min",
                            coins = 20
                        },
                        new
                        {
                            Id = 20,
                            Description = "Water the plants and give them fertilizer if needed",
                            Name = "Water the plants",
                            Tags = "plants",
                            Time = "15 min",
                            coins = 15
                        },
                        new
                        {
                            Id = 21,
                            Description = "Check the fridge and make sure all expired food are removed",
                            Name = "Remove expired food",
                            Tags = "fridge ",
                            Time = "15 min",
                            coins = 15
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Coins")
                        .HasColumnType("int");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChildFree")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Coins = 5000,
                            Hash = "BBvCTG4MF3e0YvDBW7mPkimgpAOpbP7HUkNb8YRmHjM8KdNBKFRRgctlBZV/WZ0GfasEBS8qJCuPB0Z4rOalX0UuAxkqmoBznghkV+lmxmIod+25vzFPjuSYhN7QvWsfPvGf7Ze1w/qG3xQ6KBTgjTc+yKe9bcaQPFBjiYPVnM1RYsUPC3RG47Q27K2xqCOQTtdvaAUEhoDgaCLi3zyi+e750FEZ6e9y1HObs4Zsnl2Yk4AwkFZ8IZBnHlXoDyy1b1ICIG7+CggJdDkiNJxv57BRlNqijDwfE+6vBujqvr7a5kgzWgGoEMBsqLpFNv7j7sIJVBjevmyV3X8eDAY68g==",
                            IsChildFree = false,
                            IsDeleted = false,
                            Name = "JT",
                            Photo = "https://scrubbystorage.blob.core.windows.net/scrubbystorage/avatar1.png",
                            Points = 600,
                            Salt = "6oyIFN+J/zb3uaje2+GP98c/WdMgNb9Rwbn3Wyi51i+OUta55QsZFkrTqbJy9hiothKp95mleCPySEZOIOcPIg==",
                            Username = "JT"
                        },
                        new
                        {
                            Id = 2,
                            Coins = 1000,
                            Hash = "BBvCTG4MF3e0YvDBW7mPkimgpAOpbP7HUkNb8YRmHjM8KdNBKFRRgctlBZV/WZ0GfasEBS8qJCuPB0Z4rOalX0UuAxkqmoBznghkV+lmxmIod+25vzFPjuSYhN7QvWsfPvGf7Ze1w/qG3xQ6KBTgjTc+yKe9bcaQPFBjiYPVnM1RYsUPC3RG47Q27K2xqCOQTtdvaAUEhoDgaCLi3zyi+e750FEZ6e9y1HObs4Zsnl2Yk4AwkFZ8IZBnHlXoDyy1b1ICIG7+CggJdDkiNJxv57BRlNqijDwfE+6vBujqvr7a5kgzWgGoEMBsqLpFNv7j7sIJVBjevmyV3X8eDAY68g==",
                            IsChildFree = false,
                            IsDeleted = false,
                            Name = "Angel Pantoja",
                            Photo = "https://scrubbystorage.blob.core.windows.net/scrubbystorage/avatar2.png",
                            Points = 1000,
                            Salt = "6oyIFN+J/zb3uaje2+GP98c/WdMgNb9Rwbn3Wyi51i+OUta55QsZFkrTqbJy9hiothKp95mleCPySEZOIOcPIg==",
                            Username = "Angel"
                        },
                        new
                        {
                            Id = 3,
                            Coins = 5000,
                            Hash = "BBvCTG4MF3e0YvDBW7mPkimgpAOpbP7HUkNb8YRmHjM8KdNBKFRRgctlBZV/WZ0GfasEBS8qJCuPB0Z4rOalX0UuAxkqmoBznghkV+lmxmIod+25vzFPjuSYhN7QvWsfPvGf7Ze1w/qG3xQ6KBTgjTc+yKe9bcaQPFBjiYPVnM1RYsUPC3RG47Q27K2xqCOQTtdvaAUEhoDgaCLi3zyi+e750FEZ6e9y1HObs4Zsnl2Yk4AwkFZ8IZBnHlXoDyy1b1ICIG7+CggJdDkiNJxv57BRlNqijDwfE+6vBujqvr7a5kgzWgGoEMBsqLpFNv7j7sIJVBjevmyV3X8eDAY68g==",
                            IsChildFree = false,
                            IsDeleted = false,
                            Name = "Walaa AlSalmi",
                            Photo = "https://scrubbystorage.blob.core.windows.net/scrubbystorage/avatar3.png",
                            Points = 1000,
                            Salt = "6oyIFN+J/zb3uaje2+GP98c/WdMgNb9Rwbn3Wyi51i+OUta55QsZFkrTqbJy9hiothKp95mleCPySEZOIOcPIg==",
                            Username = "Walaa"
                        },
                        new
                        {
                            Id = 4,
                            Coins = 50000,
                            Hash = "BBvCTG4MF3e0YvDBW7mPkimgpAOpbP7HUkNb8YRmHjM8KdNBKFRRgctlBZV/WZ0GfasEBS8qJCuPB0Z4rOalX0UuAxkqmoBznghkV+lmxmIod+25vzFPjuSYhN7QvWsfPvGf7Ze1w/qG3xQ6KBTgjTc+yKe9bcaQPFBjiYPVnM1RYsUPC3RG47Q27K2xqCOQTtdvaAUEhoDgaCLi3zyi+e750FEZ6e9y1HObs4Zsnl2Yk4AwkFZ8IZBnHlXoDyy1b1ICIG7+CggJdDkiNJxv57BRlNqijDwfE+6vBujqvr7a5kgzWgGoEMBsqLpFNv7j7sIJVBjevmyV3X8eDAY68g==",
                            IsChildFree = false,
                            IsDeleted = false,
                            Name = "DB",
                            Photo = "https://scrubbystorage.blob.core.windows.net/scrubbystorage/avatar4.png",
                            Points = 50000,
                            Salt = "6oyIFN+J/zb3uaje2+GP98c/WdMgNb9Rwbn3Wyi51i+OUta55QsZFkrTqbJy9hiothKp95mleCPySEZOIOcPIg==",
                            Username = "DB"
                        },
                        new
                        {
                            Id = 5,
                            Coins = 15000,
                            Hash = "BBvCTG4MF3e0YvDBW7mPkimgpAOpbP7HUkNb8YRmHjM8KdNBKFRRgctlBZV/WZ0GfasEBS8qJCuPB0Z4rOalX0UuAxkqmoBznghkV+lmxmIod+25vzFPjuSYhN7QvWsfPvGf7Ze1w/qG3xQ6KBTgjTc+yKe9bcaQPFBjiYPVnM1RYsUPC3RG47Q27K2xqCOQTtdvaAUEhoDgaCLi3zyi+e750FEZ6e9y1HObs4Zsnl2Yk4AwkFZ8IZBnHlXoDyy1b1ICIG7+CggJdDkiNJxv57BRlNqijDwfE+6vBujqvr7a5kgzWgGoEMBsqLpFNv7j7sIJVBjevmyV3X8eDAY68g==",
                            IsChildFree = false,
                            IsDeleted = false,
                            Name = "Peter Vang",
                            Photo = "https://scrubbystorage.blob.core.windows.net/scrubbystorage/avatar5.png",
                            Points = 15000,
                            Salt = "6oyIFN+J/zb3uaje2+GP98c/WdMgNb9Rwbn3Wyi51i+OUta55QsZFkrTqbJy9hiothKp95mleCPySEZOIOcPIg==",
                            Username = "Peter"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
