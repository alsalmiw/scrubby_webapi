// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using scrubby_webapi.Services.Context;

#nullable disable

namespace scrubby_webapi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("scrubby_webapi.Models.AssignedTasksChildModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DateCompleted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateCreated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Repeat")
                        .HasColumnType("int");

                    b.Property<int>("SelectedTasksId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AssignedTasksChildInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCompleted = "04/02/2022",
                            DateCreated = "03/30/2022",
                            IsDeleted = false,
                            Repeat = 1,
                            SelectedTasksId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateCompleted = "04/03/2022",
                            DateCreated = "03/31/2022",
                            IsDeleted = false,
                            Repeat = 1,
                            SelectedTasksId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateCompleted = "04/04/2022",
                            DateCreated = "04/01/2022",
                            IsDeleted = false,
                            Repeat = 2,
                            SelectedTasksId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            DateCompleted = "04/05/2022",
                            DateCreated = "04/02/2022",
                            IsDeleted = false,
                            Repeat = 3,
                            SelectedTasksId = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            DateCompleted = "04/06/2022",
                            DateCreated = "04/03/2022",
                            IsDeleted = false,
                            Repeat = 2,
                            SelectedTasksId = 5,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.AssignedTasksUsersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DateCompleted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateCreated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Repeat")
                        .HasColumnType("int");

                    b.Property<int>("SelectedTasksId")
                        .HasColumnType("int");

                    b.Property<int>("UserIdOwner")
                        .HasColumnType("int");

                    b.Property<int>("UserIdTasked")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AssignedTasksUsersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCompleted = "4-22-2022",
                            DateCreated = "4-21-2022",
                            Repeat = 2,
                            SelectedTasksId = 5,
                            UserIdOwner = 4,
                            UserIdTasked = 4
                        },
                        new
                        {
                            Id = 2,
                            DateCompleted = "4-12-2022",
                            DateCreated = "4-10-2022",
                            Repeat = 3,
                            SelectedTasksId = 3,
                            UserIdOwner = 3,
                            UserIdTasked = 3
                        },
                        new
                        {
                            Id = 3,
                            DateCompleted = "4-3-2022",
                            DateCreated = "4-1-2022",
                            Repeat = 1,
                            SelectedTasksId = 2,
                            UserIdOwner = 1,
                            UserIdTasked = 1
                        },
                        new
                        {
                            Id = 4,
                            DateCompleted = "4-20-2022",
                            DateCreated = "4-20-2022",
                            Repeat = 1,
                            SelectedTasksId = 4,
                            UserIdOwner = 2,
                            UserIdTasked = 2
                        },
                        new
                        {
                            Id = 5,
                            DateCompleted = "3-31-2022",
                            DateCreated = "3-30-2022",
                            Repeat = 2,
                            SelectedTasksId = 1,
                            UserIdOwner = 2,
                            UserIdTasked = 2
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.DependentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DependentAge")
                        .HasColumnType("int");

                    b.Property<int>("DependentCoins")
                        .HasColumnType("int");

                    b.Property<string>("DependentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DependentPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DependentInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DependentAge = 11,
                            DependentCoins = 5000,
                            DependentName = "Taylor",
                            DependentPhoto = "",
                            UserId = 1,
                            isDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            DependentAge = 8,
                            DependentCoins = 2000,
                            DependentName = "Sammy",
                            DependentPhoto = "",
                            UserId = 1,
                            isDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            DependentAge = 15,
                            DependentCoins = 100,
                            DependentName = "Jeff",
                            DependentPhoto = "",
                            UserId = 1,
                            isDeleted = true
                        },
                        new
                        {
                            Id = 4,
                            DependentAge = 8,
                            DependentCoins = 7000,
                            DependentName = "Jessica",
                            DependentPhoto = "",
                            UserId = 1,
                            isDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            DependentAge = 17,
                            DependentCoins = 4000,
                            DependentName = "Tony",
                            DependentPhoto = "",
                            UserId = 2,
                            isDeleted = false
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.SelectedItemsInSpaceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("SpaceId")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SelectedItemsInSpaceInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SpaceId = 1,
                            isDeleted = true
                        },
                        new
                        {
                            Id = 2,
                            SpaceId = 2,
                            isDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            SpaceId = 3,
                            isDeleted = true
                        },
                        new
                        {
                            Id = 4,
                            SpaceId = 4,
                            isDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            SpaceId = 5,
                            isDeleted = true
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.SelectedTasksModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DateCompleted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateCreated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Repeat")
                        .HasColumnType("int");

                    b.Property<int>("taskAndProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SelectedTasksInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCompleted = "3-31-2022",
                            DateCreated = "3-30-2022",
                            Repeat = 1,
                            taskAndProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateCompleted = "",
                            DateCreated = "4-1-2022",
                            Repeat = 2,
                            taskAndProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateCompleted = "4-12-2022",
                            DateCreated = "4-10-2022",
                            Repeat = 2,
                            taskAndProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            DateCompleted = "",
                            DateCreated = "4-20-2022",
                            Repeat = 3,
                            taskAndProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            DateCompleted = "4-22-2022",
                            DateCreated = "4-21-2022",
                            Repeat = 3,
                            taskAndProductId = 5
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.SharedSpacesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool?>("isAccepted")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SharedSpacesInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1,
                            isAccepted = true,
                            isDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            UserId = 2,
                            isAccepted = true,
                            isDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            UserId = 3,
                            isAccepted = true,
                            isDeleted = true
                        },
                        new
                        {
                            Id = 4,
                            UserId = 4,
                            isAccepted = true,
                            isDeleted = true
                        },
                        new
                        {
                            Id = 5,
                            UserId = 5,
                            isAccepted = true,
                            isDeleted = false
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.SpaceCollectionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CollectionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SpaceCollectionInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CollectionName = "Smith House",
                            IsDeleted = false,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CollectionName = "Storage Shed",
                            IsDeleted = false,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CollectionName = "Paris Home",
                            IsDeleted = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            CollectionName = "Work Office",
                            IsDeleted = false,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            CollectionName = "Shed",
                            IsDeleted = false,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.SpaceInfoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("SpaceCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpaceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("collectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SpaceInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SpaceCategory = "Space Category",
                            SpaceName = "Space Name",
                            collectionId = 1
                        },
                        new
                        {
                            Id = 2,
                            SpaceCategory = "Space Category",
                            SpaceName = "Space Name",
                            collectionId = 1
                        },
                        new
                        {
                            Id = 3,
                            SpaceCategory = "Space Category",
                            SpaceName = "Space Name",
                            collectionId = 1
                        },
                        new
                        {
                            Id = 4,
                            SpaceCategory = "Space Category",
                            SpaceName = "Space Name",
                            collectionId = 1
                        },
                        new
                        {
                            Id = 5,
                            SpaceCategory = "Space Category",
                            SpaceName = "Space Name",
                            collectionId = 1
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.Static.CleaningProductsStaticAPIModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Instructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Warnings")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CleaningProductsStaticAPIInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Instructions = "Spray compound onto window and wipe with a clean towel",
                            ProductName = "Window Wipers",
                            TaskTags = "Window, Mirror",
                            Warnings = "HARMFUL IF SWALLOWED. SKIN AND EYE IRRITANT."
                        },
                        new
                        {
                            Id = 2,
                            Instructions = "Spray compound onto surface and scurb with a sponge",
                            ProductName = "Bleach",
                            TaskTags = "Toilet, Shower, Bathtub",
                            Warnings = "HARMFUL IF SWALLOWED. SKIN AND EYE IRRITANT."
                        },
                        new
                        {
                            Id = 3,
                            Instructions = "Squeeze onto a sponge",
                            ProductName = "Dish Detergents",
                            TaskTags = "Dishes",
                            Warnings = "HARMFUL IF SWALLOWED. SKIN AND EYE IRRITANT."
                        },
                        new
                        {
                            Id = 4,
                            Instructions = "Pour into a bucket of warm water and stir until product is mixed",
                            ProductName = "Floor Detergents",
                            TaskTags = "Floor",
                            Warnings = "HARMFUL IF SWALLOWED. SKIN AND EYE IRRITANT."
                        },
                        new
                        {
                            Id = 5,
                            Instructions = "Spray compound onto window and wipe with a clean towel",
                            ProductName = "Window Wipers",
                            TaskTags = "Window, Mirror",
                            Warnings = "HARMFUL IF SWALLOWED. SKIN AND EYE IRRITANT."
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.Static.SpaceItemsStaticAPIModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SpaceItemsStaticAPIInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A chair that is brown",
                            Name = "Chair",
                            Tags = "wood, living room, bedroom, office "
                        },
                        new
                        {
                            Id = 2,
                            Description = "A lamp that is shiny",
                            Name = "Lamp",
                            Tags = "bright, metal, living room, bedroom, office "
                        },
                        new
                        {
                            Id = 3,
                            Description = "A round table that is made of wood",
                            Name = "Wooden Table",
                            Tags = "kitchen, living room, bedroom, office"
                        },
                        new
                        {
                            Id = 4,
                            Description = "A table that is made of glass",
                            Name = "Glass Table",
                            Tags = "kitchen, living room, bedroom, office"
                        },
                        new
                        {
                            Id = 5,
                            Description = "A table that is made of ceramic",
                            Name = "Ceramic Table",
                            Tags = "kitchen, living room, bedroom, office"
                        },
                        new
                        {
                            Id = 6,
                            Description = "A table that is made of granite",
                            Name = "Granite Table",
                            Tags = "kitchen, living room, bedroom, office"
                        },
                        new
                        {
                            Id = 7,
                            Description = "A table that is made of marble",
                            Name = "Marble Table",
                            Tags = "kitchen, living room, bedroom, office"
                        },
                        new
                        {
                            Id = 8,
                            Description = "A rug that is fluffy",
                            Name = "Rug",
                            Tags = "carpet, fluffy, living room, bedroom"
                        },
                        new
                        {
                            Id = 9,
                            Description = "A water bed",
                            Name = "Water Bed",
                            Tags = "slippery, wet, bedroom, "
                        },
                        new
                        {
                            Id = 10,
                            Description = "A standard bed",
                            Name = "Bed",
                            Tags = "bedroom, attic"
                        },
                        new
                        {
                            Id = 11,
                            Description = "A bunk bed with one mattress in the bottom and another mattress in the top",
                            Name = "Bunk Bed",
                            Tags = "bedroom, attic"
                        },
                        new
                        {
                            Id = 12,
                            Description = "A bed that is made for babies/toddlers",
                            Name = "Baby Cot",
                            Tags = "bedroom, attic, living room"
                        },
                        new
                        {
                            Id = 13,
                            Description = "A bed that is made for children",
                            Name = "Children Bed",
                            Tags = "bedroom, attic"
                        },
                        new
                        {
                            Id = 14,
                            Description = "a bed that is used in the medical field",
                            Name = "Medical Bed",
                            Tags = "bedroom, attic,"
                        },
                        new
                        {
                            Id = 15,
                            Description = "A bed that can be a sofa or can fold into a bed",
                            Name = "Futon",
                            Tags = "bedroom, attic, living room"
                        },
                        new
                        {
                            Id = 16,
                            Description = "A bed that is inflated by air",
                            Name = "Air Mattress Bed",
                            Tags = "bedroom, attic"
                        },
                        new
                        {
                            Id = 17,
                            Description = "A floor that is made of ceramic tiles",
                            Name = "Ceramic Tile Floor",
                            Tags = "living room, bathroom, kitchen"
                        },
                        new
                        {
                            Id = 18,
                            Description = "A floor that is made of vinyl",
                            Name = "Vinyl Floor",
                            Tags = "living room, bathroom, kitchen"
                        },
                        new
                        {
                            Id = 19,
                            Description = "A floor that is made of concrete",
                            Name = "Concrete Floor",
                            Tags = "living room, bathroom, kitchen"
                        },
                        new
                        {
                            Id = 20,
                            Description = "A water bed",
                            Name = "Wooden Desk",
                            Tags = "slippery, wet, bedroom"
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.Static.TasksInfoStaticAPIModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("coins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TasksInfoStaticAPIInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Clean the toilet using wax on and wax off",
                            Name = "Clean toilet",
                            Tags = "tile, slippery",
                            Time = "15 min",
                            coins = 20
                        },
                        new
                        {
                            Id = 2,
                            Description = "Make bed using military style",
                            Name = "Make bed",
                            Tags = "sheets, pillow",
                            Time = "5 min",
                            coins = 10
                        },
                        new
                        {
                            Id = 3,
                            Description = "Wash dishes by hand",
                            Name = "Wash dishes",
                            Tags = "soap, water",
                            Time = "10 min",
                            coins = 15
                        },
                        new
                        {
                            Id = 4,
                            Description = "Wash clothes with one batch colors and other batch white",
                            Name = "Do laundry",
                            Tags = "tile, slippery",
                            Time = "15 min",
                            coins = 20
                        },
                        new
                        {
                            Id = 5,
                            Description = "Dust living room with swifter",
                            Name = "Dust living room",
                            Tags = "dust, swifter",
                            Time = "5 min",
                            coins = 5
                        });
                });

            modelBuilder.Entity("scrubby_webapi.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Coins")
                        .HasColumnType("int");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("UserInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Coins = 5000,
                            Hash = "",
                            Photo = "",
                            Salt = "",
                            Username = "JT",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            Coins = 1000,
                            Hash = "",
                            Photo = "",
                            Salt = "",
                            Username = "Angel",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            Coins = 5000,
                            Hash = "",
                            Photo = "",
                            Salt = "",
                            Username = "Walaa",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            Coins = 50000,
                            Hash = "",
                            Photo = "",
                            Salt = "",
                            Username = "DB",
                            isDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            Coins = 15000,
                            Hash = "",
                            Photo = "",
                            Salt = "",
                            Username = "Peter",
                            isDeleted = false
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
